{"version":3,"sources":["timeline.jsx","App.js","serviceWorker.js","index.js"],"names":["react_default","a","createElement","className","style","left","Component","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scrollPosition","that","window","addEventListener","e","setState","document","documentElement","scrollTop","console","log","event","preventDefault","data","FormData","target","fetch","method","body","response","json","pageOne","scrollHeight","pageTwo","Typist_default","avgTypingDelay","Delay","ms","class","src","concat","process","alt","href","height","onSubmit","handleSubmit","type","name","placeholder","value","pattern","timeline_default","React","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4ecde70.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class extends Component{\n    render(){\n\n        return(\n<section>\n          <div className=\"container\">\n            <h1 className=\"text-center\"> My Journey </h1>\n            <div className=\"timeline flex-container\">\n              <div className=\"timeline-item flex-items-default selected\">\n                <div className=\"timeline-content text-left animated bounceIn\">\n                  <h2> UT Austin </h2>\n                  <p> In August of 2018, I started studying Computer Science B.S. at The University of Texas at Austin. While I am here, I plan on getting a minor in Business Foundations and a certificate in Statistical Modeling. </p>\n                </div>\n              </div>\n              <div className=\"timeline-item flex-items-default\">\n                <div className=\"timeline-content text-left \">\n                  <h2>Texas Convergent: PHLY </h2>\n                  <p>In December of 2018, I became a part of an incubator company through Texas Convergent, called PHLY. PHLY is a non-profit start-up company aimed at making the process of microdonations more efficient, while including features to create a larger payment conglomerate. I am a front-end developer on this team, working to create a mobile app and website. </p>\n                </div>\n              </div>\n              <div className=\"timeline-item flex-items-default\">\n                <div className=\"timeline-content text-left\">\n                  <h2> Women in Computer Science: Social Outreach Chair</h2>\n                  <p>In May of 2019, I interviewed and was selected as a Social Outreach chair for my school’s Women in Computer Science organization.  I am going to be responsible for organizing community events that are in support of creating a welcoming environment for women interested in computing. </p>\n                </div>\n              </div>\n              <div className=\"timeline-item flex-items-default\">\n                <div className=\"timeline-content text-left\">\n                  <h2> Recycle Now </h2>\n                  <p> In January of 2019, during a hackathon organized by the Women Computer Science organization, my team and I put together a small project called Recycle Now. It is an app that allows users to take pictures of random objects and returns the right method of disposal depending on what it is: Recycle, Compost or Trash. To build this app we used Apple’s Machine Learning toolkit as well as Swift to deploy it onto an app. </p>\n                </div>\n              </div>\n              <div className=\"timeline-item flex-items-default\">\n                <div className=\"timeline-content text-left\">\n                  <h2>Internship: MassMutual</h2>\n                  <p>During the summer of 2019, I have been interning with the Life Insurance Company MassMutual as a Software Engineering Intern. As a front-end developer on the Interactive Content and Tools team, I have been working to enhance the Calculators on the webpage as well contributing to the MassMutual React Component Library. </p>\n                </div>\n              </div>\n              <div className=\"dropdown animated bounceIn\" style={{left: '-88px'}}>\n                <div className=\"inner\">\n                  <div className=\"arrow-down\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n)\n}\n}","import React from 'react';\nimport Typist from 'react-typist';\nimport Timeline from './timeline'\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      scrollPosition: 0\n    }\n  }\n  componentDidMount() {\n    //var $timeline        = $('.timeline');\n    const that = this;\n    window.addEventListener('scroll', function (e) {\n      that.setState({ scrollPosition: document.documentElement.scrollTop })\n      console.log(\"you scrolled\", document.documentElement.scrollTop)\n    });\n\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const response = await fetch(\"/contact\", {method : \"POST\", body: data});\n    const json = await response.json();\n    console.log(json);\n    console.log(response);\n  }\n\n  render() {\n    const pageOne = (this.state.scrollPosition > document.body.scrollHeight / 20) ? ' openPage' : '';\n    const pageTwo = (this.state.scrollPosition > (document.body.scrollHeight / 3)) ? ' closePage' : '';\n    return (\n      <div className=\"App\">\n        <div className={\"mainPage mainPage--left\" + pageOne}>\n          <div className=\"introduction\">\n            <Typist\n            avgTypingDelay={40}\n            >\n              <p className=\"nameTitle\"> Hi, I am Tejna Dasari! </p>\n              <Typist.Delay ms={1000} />\n              \n              <br></br>\n              <p className=\"aboutMe\" > I am a rising sophomore at the University of Texas at Austin, majoring in Computer Science and minoring in Business Foundations</p>\n            </Typist>\n          </div>\n          \n        </div>\n        <div className={\"mainPage mainPage--right\" + pageOne}>\n          <img class = \"profile\" src = {`${process.env.PUBLIC_URL}/images/website_profile.png`} alt = \"\"></img>\n          <div className = \"socialLinks\">\n            <a href = 'https://www.linkedin.com/in/tejna-dasari-454b3516a/'>\n              <img class = \"linkedin\" height = \"50px\" src = {`${process.env.PUBLIC_URL}/images/linkedin.png`} alt = \"\"></img>\n            </a>\n            <a href = 'https://github.com/tejnadasari'>\n              <img class = \"gitHub\" height = \"50px\" src = {`${process.env.PUBLIC_URL}/images/Octocat.png`} alt = \"\"></img>\n            </a>\n            <a href = 'https://www.instagram.com/tejnadasari/?hl=en'>\n              <img class = \"instagram\" height = \"50px\"  src = {`${process.env.PUBLIC_URL}/images/instagram'.png`} alt = \"\"></img>\n            </a>\n          </div>\n        </div>\n        <div className={\"lastPage lastPage--left\" + pageTwo}>\n          <form className = \"form\" onSubmit = {this.handleSubmit}>\n          <br></br>\n          <br></br>\n            <h1 className=\"introStatements\">\n              Let's Talk.\n            </h1>\n            <h2 className=\"introStatements\">\n              Fill this out so I can get back to you!\n            </h2>\n            <br></br>\n            <br></br>\n            <div className=\"inputs\">\n              <p className=\"basic nameSentence\">\n                My <em> name </em> is\n                  <input\n                  type=\"text\"\n                  name=\"fullName\"\n                  placeholder=\"Full Name\" />.\n              </p>\n              <br></br>\n              <p className=\"basic interestSentence\">\n                I am a\n                <span>\n                  <select name=\"occupation\">\n                    <option value=\"Student\"> Student </option>\n                    <option value=\"Recruiter\"> Recruiter </option>\n                    <option value=\"Other\"> Other </option>\n                  </select>\n                </span>\n                , who is interested in\n                <input\n                  type=\"text\"\n                  name=\"subject\" />.\n                <br></br>\n                <br></br>\n              I am looking to talk to you about\n                <input\n                  type=\"text\"\n                  name=\"topic\" />.\n                <br></br>\n                <br></br>\n            </p>\n              <p className=\"basic contactMe\">\n                The best <em>number</em> you can reach me at is\n                <input\n                  type=\"phone\"\n                  name=\"phoneNumber\"\n                  placeholder=\"###-###-####\"\n                  pattern=\"^[2-9]\\d{2}-\\d{3}-\\d{4}$\" />\n                and\n                <br></br>\n                <br></br>\n                <em> email</em> me at\n                <input\n                  type=\"email\"\n                  name=\"emailAddress\"\n                  placeholder=\" Email Address \" />\n                to get in touch. Thanks!\n            </p>\n            </div>\n            <br></br>\n            <br></br>\n            <p>\n              <input className=\"button\" type=\"submit\" value=\"Submit\" />\n            </p>\n          </form>\n        </div>\n        <div className={\"lastPage lastPage--right\" + pageTwo}>\n          {/* <img height = \"100%\" width = \"100%\"src = {`${process.env.PUBLIC_URL}/images/lastRight.svg`} alt = \"\"></img> */}\n        </div>\n        <div className=\"secondPage\">\n        <Timeline></Timeline>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}